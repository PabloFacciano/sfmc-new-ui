<script runat="server">
// v1109
try {
  // API Init
  var api_config = {
    token_data_extension: 'sfmc_token',
    token_row: null,
    token: null
  }

  // SFMC API
  function sfmc_get_token(){
    // Return available token
    if (api_config.token != null && 
        api_config.token.expiresAt < new Date()){
      return api_config.token.value; 
    }    

  }

  // Get saved token and validate
  var savedToken = getSavedToken();
  if (savedToken != null){
    if (savedToken.token != null && (new Date(savedToken.expiresAt)).getTime() > new Date().getTime()){
      // Return saved token
      api_config.token = savedToken;
    } else {
      // Get new token and return
      api_config.token = getNewToken();
      saveCurrentToken();
    }
  } else {
    // Get new token and return
    api_config.token = getNewToken();
    saveCurrentToken();
  }
  return api_config.token.value;
}

  // SFMC WSPROXY
  var api_wsproxy = new Script.Util.WSProxy();




  // API Entry point
  function run_api(){
    var input = Platform.Request.GetPostData('utf-8');
    if (input){
      input = Platform.Function.ParseJSON(input);
    }
    var output = {
      status: 'ok',
      request: {
        url: Platform.Request.RequestURL,
        payload: input
      },
      token: api_config.token
    }
    Platform.Response.Write(Platform.Function.Stringify(output))
  }
  run_api();

} catch(e){
  Platform.Response.Write(Platform.Function.Stringify({
    status: 'error',
    error: e
  }))
}

</script>